/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package guiframes;

import com.formdev.flatlaf.intellijthemes.materialthemeuilite.FlatMaterialLighterIJTheme;
import databaseConnection.DatabaseConnection;
import databaseFacade.DbFacade;
import java.awt.HeadlessException;
import java.awt.print.PrinterException;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.text.SimpleDateFormat;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;
import java.text.MessageFormat;
import java.util.ArrayList;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.TableRowSorter;
import javax.swing.table.TableModel;
import java.util.Date;
import javax.print.attribute.HashPrintRequestAttributeSet;
import javax.print.attribute.PrintRequestAttributeSet;
import javax.print.attribute.standard.OrientationRequested;
import javax.swing.JFrame;
import javax.swing.JTextField;
import resetFieldThread.ResetFieldRunnable;

/**
 *
 * @author pc
 */
public class AddingNewTrainer extends JFrame {
    
    /**
     * Creates new form TrainerMakeAccount
     */
    public AddingNewTrainer() {
        initComponents();
        showRecords();
    }
    
    private void resetFields() {
        ArrayList<JTextField> listOfTextFields = new ArrayList();
       
        listOfTextFields.add(idtextfield);
        listOfTextFields.add(usernamefield);
        listOfTextFields.add(firstnamefield);
        listOfTextFields.add(surnamefield);
        listOfTextFields.add(emailfield);
        listOfTextFields.add(phonenumberfield);
        listOfTextFields.add(gendertextfield); 
        
        ResetFieldRunnable resetRunnable = 
                new ResetFieldRunnable(listOfTextFields, dobfield, passwordfield);                                                                         
        Thread resetFieldsThread = new Thread(resetRunnable);
        resetFieldsThread.start();
    }
    
    public void showRecords() {
        try {
            String query = "SELECT * FROM employees_table";
            PreparedStatement pst = DatabaseConnection.getConnection().prepareStatement(query);
            ResultSet rs = pst.executeQuery();
            
            ResultSetMetaData rsm = rs.getMetaData();
            int numberOfColumns = rsm.getColumnCount();
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            dtm.setRowCount(0);
            
            while (rs.next()) {                
                ArrayList<String> listOfColumns = new ArrayList();
                for (int i = 1; i <= numberOfColumns; i++) {
                    listOfColumns.add(rs.getString(i));                 
                }
                dtm.addRow(listOfColumns.toArray());
            }
        } catch (SQLException e) {}
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        checkbox1 = new java.awt.Checkbox();
        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        usernamefield = new javax.swing.JTextField();
        firstnamefield = new javax.swing.JTextField();
        surnamefield = new javax.swing.JTextField();
        dobfield = new com.toedter.calendar.JDateChooser();
        emailfield = new javax.swing.JTextField();
        passwordfield = new javax.swing.JPasswordField();
        phonenumberfield = new javax.swing.JTextField();
        submitbutton = new javax.swing.JButton();
        showpasswordcheckbox = new javax.swing.JCheckBox();
        backbutton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        resetbutton = new javax.swing.JButton();
        trainerloginaddbutton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        searchid = new javax.swing.JTextField();
        updatebutton = new javax.swing.JButton();
        deletebutton = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        gendertextfield = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        idtextfield = new javax.swing.JTextField();
        exporttopdfbutton = new javax.swing.JButton();

        checkbox1.setLabel("checkbox1");

        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("jRadioButtonMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/gymlogo.PNG"))); // NOI18N

        jLabel3.setText("Username:");

        jLabel4.setText("Name:");

        jLabel5.setText("Surname:");

        jLabel6.setText("Date of birth:");

        jLabel7.setText("Phone number:");

        jLabel8.setText("Email:");

        jLabel10.setText("Password:");

        submitbutton.setText("Submit");
        submitbutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                submitbuttonMouseClicked(evt);
            }
        });

        showpasswordcheckbox.setText("Show password");
        showpasswordcheckbox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                showpasswordcheckboxMouseClicked(evt);
            }
        });
        showpasswordcheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showpasswordcheckboxActionPerformed(evt);
            }
        });

        backbutton.setText("Back");
        backbutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backbuttonMouseClicked(evt);
            }
        });

        jLabel1.setText("Add a new trainer");

        resetbutton.setText("Reset");
        resetbutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resetbuttonMouseClicked(evt);
            }
        });

        trainerloginaddbutton.setText("Trainer login add");
        trainerloginaddbutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                trainerloginaddbuttonMouseClicked(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Username", "Name", "Surname", "Date of birth", "Email", "Phone ", "Password", "Gender"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel11.setText("Search:");

        searchid.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                searchidMouseReleased(evt);
            }
        });
        searchid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchidKeyReleased(evt);
            }
        });

        updatebutton.setText("Update");
        updatebutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updatebuttonMouseClicked(evt);
            }
        });

        deletebutton.setText("Delete");
        deletebutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deletebuttonMouseClicked(evt);
            }
        });

        jLabel9.setText("Gender:");

        jLabel12.setText("ID:");

        exporttopdfbutton.setText("Export to PDF");
        exporttopdfbutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exporttopdfbuttonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(134, 134, 134)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel7)
                                        .addComponent(jLabel10))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(passwordfield, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                                        .addComponent(phonenumberfield, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                                        .addComponent(gendertextfield)))
                                .addComponent(showpasswordcheckbox, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(surnamefield, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(emailfield, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addGap(18, 18, 18)
                                        .addComponent(dobfield, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(51, 51, 51)
                                        .addComponent(firstnamefield, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel3)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jLabel12)
                                                .addGap(72, 72, 72)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(usernamefield, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                                            .addComponent(idtextfield)))))
                            .addComponent(jLabel1))
                        .addGap(66, 66, 66)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(deletebutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(submitbutton, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                            .addComponent(resetbutton, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                            .addComponent(trainerloginaddbutton, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                            .addComponent(jLabel11)
                            .addComponent(searchid)
                            .addComponent(updatebutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(backbutton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(exporttopdfbutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(56, 56, 56))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(searchid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(5, 5, 5)
                                .addComponent(jLabel12))
                            .addComponent(idtextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(resetbutton)
                            .addComponent(jLabel3)
                            .addComponent(usernamefield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(backbutton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(surnamefield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(trainerloginaddbutton, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(7, 7, 7)
                                        .addComponent(dobfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(25, 25, 25)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(emailfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(submitbutton)))
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(deletebutton)
                                        .addGap(23, 23, 23)
                                        .addComponent(updatebutton)
                                        .addGap(18, 18, 18)
                                        .addComponent(exporttopdfbutton)
                                        .addGap(95, 95, 95))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(3, 3, 3)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel7)
                                            .addComponent(phonenumberfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(30, 30, 30)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel10)
                                            .addComponent(passwordfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(11, 11, 11)
                                        .addComponent(showpasswordcheckbox)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel9)
                                            .addComponent(gendertextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(firstnamefield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void showpasswordcheckboxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showpasswordcheckboxMouseClicked
        // TODO add your handling code here:
        if (showpasswordcheckbox.isSelected()) {
            passwordfield.setEchoChar((char)0);
        }
        else {
            passwordfield.setEchoChar('*');
        }
    }//GEN-LAST:event_showpasswordcheckboxMouseClicked

    private void backbuttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backbuttonMouseClicked
        // TODO add your handling code here:
        GymOwnerMenu gom = new GymOwnerMenu();
        gom.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_backbuttonMouseClicked

    private void resetbuttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetbuttonMouseClicked
        // TODO add your handling code here:
        resetFields();
    }//GEN-LAST:event_resetbuttonMouseClicked

    private void showpasswordcheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showpasswordcheckboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_showpasswordcheckboxActionPerformed

    private void submitbuttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submitbuttonMouseClicked
        // TODO add your handling code here:
        
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String date = sdf.format(dobfield.getDate());
        

        if (usernamefield.getText().isEmpty() || firstnamefield.getText().isEmpty() || surnamefield.getText().isEmpty() || dobfield.getDate().toString().isEmpty() || emailfield.getText().isEmpty() || phonenumberfield.getText().isEmpty() || passwordfield
            .getText().isEmpty() || gendertextfield.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Missing information, fields can't be empty", "", JOptionPane.WARNING_MESSAGE);

        } else {
            try {
                String query = "INSERT INTO employees_table VALUES(?,?,?,?,?,?,?,?,?)";
                PreparedStatement pst = DatabaseConnection.getConnection().prepareStatement(query);
                
                pst.setString(1, idtextfield.getText());
                pst.setString(2, usernamefield.getText());
                pst.setString(3, firstnamefield.getText());
                pst.setString(4, surnamefield.getText());
                pst.setString(5, date);
                pst.setString(6, emailfield.getText());
                pst.setInt(7, Integer.valueOf(phonenumberfield.getText()));
                pst.setString(8, passwordfield.getText());
                pst.setString(9, gendertextfield.getText());
                
    
                int row = pst.executeUpdate();
                JOptionPane.showMessageDialog(this, "Trainer account successfully created", "", JOptionPane.INFORMATION_MESSAGE);
                pst.close();
                showRecords();
                resetFields();
                
            } catch (HeadlessException | NumberFormatException | SQLException e) {
                JOptionPane.showMessageDialog(this, e + "\nTrainer account creation failed", "", JOptionPane.ERROR_MESSAGE);

            }
        }
    }//GEN-LAST:event_submitbuttonMouseClicked

    private void trainerloginaddbuttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_trainerloginaddbuttonMouseClicked
        // TODO add your handling code here:
        Addingtrainerlogin atlg = new Addingtrainerlogin();
        atlg.setVisible(true);
        setVisible(false);
        
    }//GEN-LAST:event_trainerloginaddbuttonMouseClicked

    private void searchidMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchidMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_searchidMouseReleased

    private void searchidKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchidKeyReleased
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        TableRowSorter<DefaultTableModel> dtm1 = new TableRowSorter<>(dtm);
        jTable1.setRowSorter(dtm1);
        dtm1.setRowFilter(RowFilter.regexFilter(searchid.getText()));
    }//GEN-LAST:event_searchidKeyReleased

    private void deletebuttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deletebuttonMouseClicked
        // TODO add your handling code here:
            
        int delete = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this data?", "",JOptionPane.YES_NO_OPTION);
        if(delete==0){
            try {
                int row = jTable1.getSelectedRow();
                String value = (jTable1.getModel().getValueAt(row,0).toString());
                
                String query = "DELETE FROM employees_table WHERE id ="+ value;
                PreparedStatement pst = DatabaseConnection.getConnection().prepareStatement(query);
                pst.executeUpdate();
                JOptionPane.showMessageDialog(null, "Deleted successfully", "", JOptionPane.INFORMATION_MESSAGE);
                showRecords();
                
            } catch (HeadlessException | SQLException e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_deletebuttonMouseClicked

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:

int i = jTable1.getSelectedRow();
TableModel model = jTable1.getModel();

idtextfield.setText(model.getValueAt(i, 0).toString());
usernamefield.setText(model.getValueAt(i, 1).toString());
firstnamefield.setText(model.getValueAt(i, 2).toString());
surnamefield.setText(model.getValueAt(i, 3).toString());
        try {
            int srow = jTable1.getSelectedRow();
            Date date = new SimpleDateFormat("yyyy-MM-dd").parse((String)model.getValueAt(srow, 4));
            dobfield.setDate(date);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
      emailfield.setText(model.getValueAt(i, 5).toString());
      phonenumberfield.setText(model.getValueAt(i, 6).toString());
      passwordfield.setText(model.getValueAt(i, 7).toString());
      gendertextfield.setText(model.getValueAt(i, 8).toString());
               
    }//GEN-LAST:event_jTable1MouseClicked

    private void updatebuttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatebuttonMouseClicked
        // TODO add your handling code here:

        try {
            
            String value = idtextfield.getText();
            String query = "UPDATE employees_table SET username = ?, name = ?, surname = ?, dateofbirth = ?, email = ?, phonenumber = ?, password = ?, gender = ? WHERE id =" + value;
            
            PreparedStatement pst = DatabaseConnection.getConnection().prepareStatement(query);
            
                pst.setString(1, usernamefield.getText());
                pst.setString(2, firstnamefield.getText());
                pst.setString(3, surnamefield.getText());
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                String date = sdf.format(dobfield.getDate());
                pst.setString(4, date);
                pst.setString(5, emailfield.getText());
                pst.setInt(6, Integer.valueOf(phonenumberfield.getText()));
                pst.setString(7, passwordfield.getText());
                pst.setString(8, gendertextfield.getText());
            
                pst.executeUpdate();
                showRecords();
            
            JOptionPane.showMessageDialog(this, "Updated successfully", "", JOptionPane.INFORMATION_MESSAGE);           
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_updatebuttonMouseClicked

    private void exporttopdfbuttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exporttopdfbuttonMouseClicked
        // TODO add your handling code here:
        MessageFormat header = new MessageFormat("Gym employees list");
        MessageFormat footer = new MessageFormat("1");
        
        try {
            PrintRequestAttributeSet set = new HashPrintRequestAttributeSet();
            set.add(OrientationRequested.LANDSCAPE);
            jTable1.print(JTable.PrintMode.FIT_WIDTH, header, footer, true, set, true);
            JOptionPane.showMessageDialog(null, "Exported to PDF successfully", "", JOptionPane.INFORMATION_MESSAGE);
        } catch (HeadlessException | PrinterException e) {
           JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_exporttopdfbuttonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddingNewTrainer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddingNewTrainer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddingNewTrainer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddingNewTrainer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        try {
    UIManager.setLookAndFeel(new FlatMaterialLighterIJTheme());
    } catch( UnsupportedLookAndFeelException ex ) {
    System.err.println( "Failed to initialize LaF" );
    }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddingNewTrainer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backbutton;
    private java.awt.Checkbox checkbox1;
    private javax.swing.JButton deletebutton;
    private com.toedter.calendar.JDateChooser dobfield;
    private javax.swing.JTextField emailfield;
    private javax.swing.JButton exporttopdfbutton;
    private javax.swing.JTextField firstnamefield;
    private javax.swing.JTextField gendertextfield;
    private javax.swing.JTextField idtextfield;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JPasswordField passwordfield;
    private javax.swing.JTextField phonenumberfield;
    private javax.swing.JButton resetbutton;
    private javax.swing.JTextField searchid;
    private javax.swing.JCheckBox showpasswordcheckbox;
    private javax.swing.JButton submitbutton;
    private javax.swing.JTextField surnamefield;
    private javax.swing.JButton trainerloginaddbutton;
    private javax.swing.JButton updatebutton;
    private javax.swing.JTextField usernamefield;
    // End of variables declaration//GEN-END:variables

   
    
}
